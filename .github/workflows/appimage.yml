name: Build Studio AppImage

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Daily check for updates

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git \
            nodejs \
            npm \
            python3 \
            python3-pip \
            libfuse2 \
            wget \
            desktop-file-utils \
            patchelf \
            unzip \
            jq

      - name: Install AppImage tools
        run: |
          wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x appimagetool
          sudo mv appimagetool /usr/local/bin/

      - name: Get latest Studio version
        id: version
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/Automattic/studio/releases/latest | jq -r '.tag_name')
          echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          echo "Found latest version: $LATEST_VERSION"

      - name: Clone Studio
        run: |
          git clone https://github.com/Automattic/studio.git
          cd studio
          git checkout ${{ steps.version.outputs.version }}
          cd ..

      - name: Build Studio
        run: |
          cd studio
          npm install
          npm run package
          cd ..

      - name: Create AppImage
        run: |
          # Create AppDir structure
          mkdir -p AppDir/usr/{bin,lib,share/{applications,icons/hicolor/256x256/apps,mime/packages}}
          
          # Copy application files
          cp -r studio/out/Studio-linux-x64/* AppDir/usr/bin/
          
          # Create desktop file
          cat > AppDir/usr/share/applications/com.automattic.Studio.desktop << EOF
          [Desktop Entry]
          Name=WordPress Studio
          Exec=studio %u
          Icon=com.automattic.Studio
          Type=Application
          Categories=Development;
          StartupWMClass=studio
          Comment=WordPress Studio
          MimeType=x-scheme-handler/wpcom-local-dev;
          X-GNOME-UsesNotifications=true
          EOF
          
          # Create MIME type file
          cat > AppDir/usr/share/mime/packages/wpcom-local-dev.xml << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <mime-info xmlns="http://www.freedesktop.org/standards/shared-mime-info">
            <mime-type type="x-scheme-handler/wpcom-local-dev">
              <comment>WordPress Studio Local Development</comment>
              <glob pattern="*.wpcom-local-dev"/>
            </mime-type>
          </mime-info>
          EOF
          
          # Copy icon
          cp studio/assets/studio-app-icon.png AppDir/usr/share/icons/hicolor/256x256/apps/com.automattic.Studio.png
          cp studio/assets/studio-app-icon.png AppDir/com.automattic.Studio.png
          
          # Create AppRun
          cat > AppDir/AppRun << EOF
          #!/bin/bash
          set -euo pipefail
          
          SELF=\$(readlink -f "\$0")
          HERE=\${SELF%/*}
          export PATH="\${HERE}/usr/bin/:\${PATH}"
          export LD_LIBRARY_PATH="\${HERE}/usr/lib/:\${LD_LIBRARY_PATH}"
          cd "\${HERE}/usr/bin"
          
          # Register URL scheme handler
          if [ ! -f "\$HOME/.local/share/applications/com.automattic.Studio.desktop" ]; then
              mkdir -p "\$HOME/.local/share/applications"
              cat > "\$HOME/.local/share/applications/com.automattic.Studio.desktop" << EOL
          [Desktop Entry]
          Name=WordPress Studio
          Exec="\$SELF" %u
          Icon=com.automattic.Studio
          Type=Application
          Categories=Development;
          StartupWMClass=studio
          Comment=WordPress Studio
          MimeType=x-scheme-handler/wpcom-local-dev;
          X-GNOME-UsesNotifications=true
          EOL
              update-desktop-database "\$HOME/.local/share/applications"
          fi
          
          # Handle URL scheme
          if [ "\$1" != "" ]; then
              exec "\${HERE}/usr/bin/studio" "\$1"
          else
              exec "\${HERE}/usr/bin/studio"
          fi
          EOF
          
          chmod +x AppDir/AppRun
          
          # Download runtime
          wget -O runtime https://github.com/AppImage/AppImageKit/releases/download/continuous/runtime-x86_64
          
          # Create AppImage
          ARCH=x86_64 appimagetool --appimage-extract-and-run AppDir Studio-x86_64.AppImage

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: Studio-x86_64.AppImage
          tag_name: ${{ steps.version.outputs.version }}
          name: Studio ${{ steps.version.outputs.version }}
          body: |
            New Studio release ${{ steps.version.outputs.version }}
            
            Changes:
            - Updated to Studio ${{ steps.version.outputs.version }}
            - Improved AppImage packaging
            - Better system integration
            - Enhanced URL scheme handling
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 