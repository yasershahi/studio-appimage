name: Build and Release Studio AppImage

on:
  schedule:
    - cron: '0 3 * * *' # daily at 03:00 UTC
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Get latest Studio release version
        id: get_version
        run: |
          latest=$(curl -s https://api.github.com/repos/Automattic/studio/releases/latest | jq -r .tag_name)
          echo "Latest Studio version: $latest"
          echo "version=$latest" >> $GITHUB_OUTPUT

      - name: Check if this version is already released
        id: check_release
        run: |
          version=${{ steps.get_version.outputs.version }}
          if gh release view "$version"; then
            echo "Already released. Exiting."
            exit 0
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Studio source code
        run: |
          version=${{ steps.get_version.outputs.version }}
          curl -L "https://github.com/Automattic/studio/archive/refs/tags/$version.tar.gz" -o studio.tar.gz
          tar xzf studio.tar.gz
          mv studio-* studio

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libnss3 libxss1 libasound2 libxtst6 libx11-xcb-dev libdrm-dev libgbm-dev libxcomposite-dev libxrandr-dev libxdamage-dev libxfixes-dev libxext-dev libxinerama-dev libxkbcommon-dev libxrender-dev libxshmfence-dev libx11-dev libxau-dev libxdmcp-dev

      - name: Install Studio dependencies
        run: |
          cd studio
          npm ci

      - name: Build Studio
        run: |
          cd studio
          npm run build

      - name: Download AppImage tool
        run: |
          wget -O appimagetool https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool

      - name: Prepare AppDir
        run: |
          mkdir -p AppDir/usr/bin
          cp -r studio/dist/* AppDir/usr/bin/
          # Add desktop file, icon, etc. as needed
          echo '[Desktop Entry]\nName=Studio\nExec=studio\nIcon=studio\nType=Application\nCategories=Development;' > AppDir/studio.desktop
          cp studio/resources/icon.png AppDir/

      - name: Build AppImage
        run: |
          ./appimagetool AppDir Studio-${{ steps.get_version.outputs.version }}.AppImage

      - name: Create GitHub Release and upload AppImage
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Studio ${{ steps.get_version.outputs.version }}
          body: "Automated AppImage build for Studio ${{ steps.get_version.outputs.version }}."
          files: Studio-${{ steps.get_version.outputs.version }}.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 