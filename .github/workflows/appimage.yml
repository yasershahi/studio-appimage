name: Build Studio AppImage

on:
  schedule:
    - cron: '0 3 * * *'  # Run daily at 03:00 UTC
  workflow_dispatch:
    inputs:
      version:
        description: 'Specific version to build (e.g., v1.5.2)'
        required: false
        type: string

env:
  NODE_VERSION: '22.12.0'

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check latest release
        id: check
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "should_build=true" >> $GITHUB_OUTPUT
          else
            latest=$(curl -sL https://api.github.com/repos/Automattic/studio/releases/latest | jq -r .tag_name)
            echo "Latest upstream version: $latest"
            echo "version=$latest" >> $GITHUB_OUTPUT
            
            if gh release view "$latest" --repo ${{ github.repository }}; then
              echo "Release already exists, skipping build"
              echo "should_build=false" >> $GITHUB_OUTPUT
            else
              echo "New version detected, will build"
              echo "should_build=true" >> $GITHUB_OUTPUT
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup build environment
        if: steps.check.outputs.should_build == 'true'
        run: |
          # Install system dependencies
          sudo apt-get update
          sudo apt-get install -y libfuse2 fuse

          # Setup Node.js
          curl -fsSL https://nodejs.org/dist/v${{ env.NODE_VERSION }}/node-v${{ env.NODE_VERSION }}-linux-x64.tar.xz | tar xJ
          echo "$PWD/node-v${{ env.NODE_VERSION }}-linux-x64/bin" >> $GITHUB_PATH

      - name: Build AppImage
        if: steps.check.outputs.should_build == 'true'
        run: |
          chmod +x ./build.sh
          ./build.sh "${{ steps.check.outputs.version }}"
          
          # Verify AppImage was created
          APPIMAGE="workspace/Studio-${{ steps.check.outputs.version }}-x86_64.AppImage"
          if [ ! -f "$APPIMAGE" ]; then
            echo "Error: AppImage was not created at $APPIMAGE"
            exit 1
          fi
          
          # Make it executable and test
          chmod +x "$APPIMAGE"
          ./"$APPIMAGE" --version || echo "Version check failed but continuing..."
          
          # Copy to root for release
          cp "$APPIMAGE" .

      - name: Create Release
        if: steps.check.outputs.should_build == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.check.outputs.version }}
          name: Studio ${{ steps.check.outputs.version }}
          files: Studio-${{ steps.check.outputs.version }}-x86_64.AppImage
          body: |
            AppImage build of Studio ${{ steps.check.outputs.version }}
            
            ## System Requirements
            - Linux x86_64
            - FUSE2 (`sudo apt-get install libfuse2`)
            
            ## Installation
            1. Download the AppImage
            2. Make it executable: `chmod +x Studio-*.AppImage`
            3. Run it: `./Studio-*.AppImage`
            
            ## Build Info
            - Built from Studio version ${{ steps.check.outputs.version }}
            - Built with Node.js ${{ env.NODE_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
